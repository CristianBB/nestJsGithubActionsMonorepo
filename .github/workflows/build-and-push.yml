name: Build and Push App

on:
  workflow_call:
    inputs:
      appName:
        required: true
        type: string
      awsRegion:
        required: true
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
    outputs:
      ecrRegistry:
        description: ECR Registry address
        value: ${{ jobs.build-and-push.outputs.ecrRegistry }}
      imageTag:
        description: Generated image tag
        value: ${{ jobs.build-and-push.outputs.imageTag }}

jobs:
  build-and-push:
    name: Build & Deploy
    runs-on: ubuntu-latest
    outputs:
      ecrRegistry: ${{ steps.build.outputs.ecrRegistry }}
      imageTag: ${{ steps.build.outputs.imageTag }}
    steps:
      - name: Print env
        run: |
          echo "appName: ${{ inputs.appName }}"

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.awsRegion }}
          mask-aws-account-id: false

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, push
        id: build
        env:
          APP_NAME: ${{ inputs.appName }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.appName }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo "Building app: $APP_NAME with tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f apps/$APP_NAME/Dockerfile .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=ecrRegistry::$ECR_REGISTRY"
          echo "::set-output name=imageTag::$IMAGE_TAG"

