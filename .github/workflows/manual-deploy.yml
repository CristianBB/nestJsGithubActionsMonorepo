name: Manual Deploy

on:
  workflow_dispatch:
    inputs:
      appName:
        description: App to deploy
        required: true
        type: choice
        # Add new apps when are created
        options:
          - app1
          - app2
          - app3
          - app4
          - nest-js-github-actions-monorepo
          - ALL
      namespace:
        description: Dest environment
        required: true
        default: alpha
        type: choice
        options:
          - alpha
          - beta
          - production

env:
  AWS_REGION: eu-west-1

jobs:
  # Set environment
  set-env:
    runs-on: ubuntu-latest
    name: Set Environment
    outputs:
      awsRegion: ${{ steps.set-env.outputs.awsRegion }}
    steps:
      - name: Set needed env vars
        id: set-env
        run: |
          echo "AWS_REGION: $AWS_REGION"
          echo "::set-output name=awsRegion::$AWS_REGION"

  # Build specific app defined as input argument
  build-one:
    uses: ./.github/workflows/build-and-push.yml
    needs: set-env
    if: ${{ inputs.appName != 'ALL' }}
    with:
      appName: ${{ inputs.appName }}
      awsRegion: ${{ needs.set-env.outputs.awsRegion }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # Build specific app defined as input argument
  deploy-one:
    uses: ./.github/workflows/deploy-argocd.yml
    needs: build-one
    with:
      appName: ${{ inputs.appName }}
      ecrRegistry: ${{ needs.build-one.outputs.ecrRegistry }}
      imageTag: ${{ needs.build-one.outputs.imageTag }}
      namespace: ${{ inputs.namespace }}
    secrets:
      ARGOCD_REPO: ${{ secrets.ARGOCD_REPO }}
      PAT_DEPLOY: ${{ secrets.PAT_DEPLOY }}

  # Get all apps from apps dir and return a json with app names
  get-all-apps:
    uses: ./.github/workflows/get-all-apps.yml
    if: ${{ inputs.appName == 'ALL' }}

  # Build apps with returned json from get-all-apps job
  build-all:
    uses: ./.github/workflows/build-and-push.yml
    needs: [set-env, get-all-apps]
    strategy:
      matrix: ${{ fromJson(needs.get-all-apps.outputs.outputJson) }}
    with:
      appName: ${{ matrix.appName }}
      awsRegion: ${{ needs.set-env.outputs.awsRegion }}
    secrets:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  # Deploy apps with returned json from get-all-apps job and data returned from build-all job (ecrRegistry, imageTag)
  # Note: this job will receive only the LAST output from build-all job
  #       But as imageTag is based on SHA it's not a problem to generate all deploys
  deploy-all:
    uses: ./.github/workflows/deploy-argocd.yml
    needs: [get-all-apps, build-all]
    strategy:
      matrix: ${{ fromJson(needs.get-all-apps.outputs.outputJson) }}
    with:
      appName: ${{ matrix.appName }}
      ecrRegistry: ${{ needs.build-all.outputs.ecrRegistry }}
      imageTag: ${{ needs.build-all.outputs.imageTag }}
      namespace: ${{ inputs.namespace }}
    secrets:
      ARGOCD_REPO: ${{ secrets.ARGOCD_REPO }}
      PAT_DEPLOY: ${{ secrets.PAT_DEPLOY }}

